import * as t from "react";
import o from "@sumsub/websdk";
var n = function(t, o) {
    return (n = Object.setPrototypeOf || {
            __proto__: []
        }
        instanceof Array && function(t, o) {
            t.__proto__ = o
        } || function(t, o) {
            for (var n in o) Object.prototype.hasOwnProperty.call(o, n) && (t[n] = o[n])
        })(t, o)
};
var r = function(r) {
    function e(o) {
        var n = r.call(this, o) || this;
        return n.div = t.createRef(), n
    }
    return function(t, o) {
        if ("function" != typeof o && null !== o) throw new TypeError("Class extends value " + String(o) + " is not a constructor or null");

        function r() {
            this.constructor = t
        }
        n(t, o), t.prototype = null === o ? Object.create(o) : (r.prototype = o.prototype, new r)
    }(e, r), e.prototype.shouldComponentUpdate = function(t) {
        return !!t.force
    }, e.prototype.componentDidMount = function() {
        this.renderSDK()
    }, e.prototype.renderSDK = function() {
        var t = function(t) {
                var n = t.expirationHandler,
                    r = t.accessToken,
                    e = t.config,
                    i = void 0 === e ? null : e,
                    s = t.options,
                    u = void 0 === s ? null : s,
                    c = t.onError,
                    p = void 0 === c ? null : c,
                    a = t.onMessage,
                    l = void 0 === a ? null : a,
                    f = t.testEnv,
                    d = void 0 !== f && f,
                    v = t.baseUrl,
                    h = void 0 === v ? null : v,
                    y = o.init(r, n);
                return i && y.withConf(i), u && y.withOptions(u), d && y.onTestEnv(), h && y.withBaseUrl(h), p && y.on("idCheck.onError", p), l && y.onMessage(l), y
            }(this.props),
            n = this.div.current;
        t.build().launch(n)
    }, e.prototype.render = function() {
        var o = this.props,
            n = o.style,
            r = void 0 === n ? {} : n,
            e = o.className,
            i = void 0 === e ? "" : e;
        return t.createElement("div", {
            style: r,
            className: i,
            ref: this.div
        })
    }, e
}(t.Component);
export {
    r as
    default
};